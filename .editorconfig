# top-level EditorConfig
root = true

[*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

# ===== C# reglas =====
[*.cs]
# Suppress DI-related "never instantiated" and minimal API "unused handler" diagnostics
dotnet_diagnostic.CA1716.severity = none
dotnet_diagnostic.CA1812.severity = none
dotnet_diagnostic.S1144.severity = none

# using y orden
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true
dotnet_diagnostic.IDE0005.severity = warning
csharp_using_directive_placement = outside_namespace:warning
dotnet_diagnostic.IDE0065.severity = warning

# longitud máxima de línea
max_line_length = 120

# var / tipos explícitos
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning
csharp_style_var_elsewhere = false:warning
dotnet_diagnostic.IDE0008.severity = warning

# llaves y nuevas líneas
csharp_prefer_braces = true:warning
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# namespaces en formato file-scoped para evitar llaves envolviendo la clase
csharp_style_namespace_declarations = file_scoped:warning

# Expresión vs bloque
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_implicit_object_creation = when_type_is_apparent:warning
dotnet_diagnostic.IDE0090.severity = warning

# Preferir constructores primarios cuando sea posible
csharp_style_prefer_primary_constructors = true:warning
dotnet_diagnostic.IDE0290.severity = warning

# Parámetros y this.
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Switch expression / patrones
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion

# ===== Roslyn Analyzers =====
dotnet_analyzer_diagnostic.severity = warning
dotnet_analyzer_diagnostic.category-Style.severity = suggestion
dotnet_analyzer_diagnostic.category-Documentation.severity = suggestion
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Naming.severity = warning
dotnet_analyzer_diagnostic.category-Performance.severity = warning
dotnet_analyzer_diagnostic.category-Reliability.severity = warning
dotnet_analyzer_diagnostic.category-Security.severity = warning
dotnet_analyzer_diagnostic.category-Maintainability.severity = suggestion
dotnet_analyzer_diagnostic.category-CodeSmell.severity = suggestion

# ===== Naming Rules =====
# private fields => _camelCase
dotnet_naming_rule.private_fields_should_be_camel_with_underscore.severity = warning
dotnet_naming_rule.private_fields_should_be_camel_with_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camel_with_underscore.style = camel_with_underscore

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers =

dotnet_naming_style.camel_with_underscore.capitalization = camel_case
dotnet_naming_style.camel_with_underscore.required_prefix = _

# Interfaces => I pascal
dotnet_naming_rule.interfaces_should_start_with_I.severity = suggestion
dotnet_naming_rule.interfaces_should_start_with_I.symbols = interfaces
dotnet_naming_rule.interfaces_should_start_with_I.style = prefix_I

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_style.prefix_I.capitalization = pascal_case
dotnet_naming_style.prefix_I.required_prefix = I

# Enforce naming diagnostics via format
dotnet_diagnostic.IDE1006.severity = warning

# Constantes => PascalCase
dotnet_naming_rule.consts_pascal.severity = suggestion
dotnet_naming_rule.consts_pascal.symbols = consts
dotnet_naming_rule.consts_pascal.style = pascal

dotnet_naming_symbols.consts.applicable_kinds = field
dotnet_naming_symbols.consts.required_modifiers = const
dotnet_naming_style.pascal.capitalization = pascal_case

[src/Payments.Api/Endpoints/**/*Validator.cs]
dotnet_diagnostic.IDE0058.severity = none
